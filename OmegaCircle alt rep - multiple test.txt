load "C:/Users/Elliot/Documents/Mathematics/OmegaCircleALTREP6.txt";

for d in [3, 5, 7, 9, 11, 13] do
for q in [3,5,7,9,11,13,17,19,23,25,81,243] do

G := Omega(d, q);

F := GF(q);
w := PrimitiveElement(F);

QQ := SOChosenElements(G);
QQ := [GL(d, F)!QQ[i] : i in [1..#QQ]];
GG := sub<SL(d, q)|QQ>;

VG := GModule(GG); 
VE := ExteriorSquare(VG); 
n := Dimension(VE);

Ebar := sub<GL(n, q) | [ActionGenerators(VE)[i] : i in [1..#ActionGenerators(VE)]]>;

P := RandomProcess(Ebar);
A := Random(P); 

QQQ := [];
for i in [1..#QQ] do
   Append(~QQQ, (ExteriorSquare(QQ[i])));
end for;

/* conjugating everything by a random matrix to make the exterior square look random */
Q := [];
for i in [1..#QQ] do
   _, word := OmegaCircleWordInGen(G, QQ[i]);
   Append(~Q, Evaluate(word, QQQ)^A);
end for;

E := sub<GL(n, q)|Q>;

P := RandomProcess(E);

for i in [1..#Q] do
n, q, "Q[", i, "]";

A := Q[i];
flag, word, scalar := OmegaCircleAltRepWordInGen(E, Q, A, d, q);

assert flag;

end for;

for i in [1..10] do 
n, q, i; 

A := Random(P);
gg := Random(GG);
flag, word := OmegaCircleWordInGen(G, gg);
A := Evaluate(word, Q);
flag, word, scalar := OmegaCircleAltRepWordInGen(E, Q, A, d, q);

assert flag;
assert scalar eq 1;

end for; 
end for; 
end for; 
