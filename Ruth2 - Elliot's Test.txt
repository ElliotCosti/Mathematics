G:= 
MatrixGroup<10, GF(3) |
\[1,0,1,1,1,0,1,0,2,1,
2,1,1,1,2,1,0,1,0,2,
1,2,1,2,0,2,1,0,0,1,
0,2,2,2,0,0,2,1,2,1,
0,0,0,0,1,0,0,0,0,0,
1,2,1,0,1,1,1,0,1,2,
2,2,1,0,0,0,2,2,2,1,
1,2,0,2,0,0,0,1,2,1,
0,1,1,2,0,0,1,2,2,2,
0,0,0,0,0,0,0,0,0,1],

\[1,2,0,2,1,0,0,1,1,2,
0,2,1,2,0,1,0,2,0,2,
1,0,2,1,0,2,2,2,1,0,
1,0,1,2,0,0,1,2,0,0,
1,0,2,2,2,0,2,2,2,1,
2,0,2,2,0,1,2,1,0,0,
2,1,0,1,0,0,1,0,1,2,
2,2,1,0,0,0,1,0,2,1,
0,2,2,1,0,0,2,1,0,1,
0,2,2,1,0,0,2,1,2,2],

\[2,2,0,2,0,1,2,0,1,1,
0,1,0,0,0,1,2,0,2,0,
1,2,1,2,0,2,1,0,0,1,
1,2,0,0,0,0,0,0,2,1,
2,1,0,1,1,1,2,0,0,2,
2,1,0,1,0,1,0,0,1,2,
2,1,0,1,0,0,1,0,1,2,
2,1,0,1,0,0,0,1,1,2,
0,0,0,0,0,0,0,0,1,0,
0,0,0,0,0,0,0,0,0,1],

\[1,0,0,0,0,0,0,0,0,0,
1,0,2,1,2,1,1,0,2,0,
2,1,2,2,1,2,2,0,1,0,
0,0,0,1,0,0,0,0,0,0,
0,0,0,0,1,0,0,0,0,0,
0,0,0,0,0,1,0,0,0,0,
0,0,0,0,0,0,1,0,0,0,
0,0,0,0,0,0,0,1,0,0,
0,0,0,0,0,0,0,0,1,0,
0,0,0,0,0,0,0,0,0,1],

\[1,0,0,0,0,0,0,0,0,0,
2,2,2,0,2,0,2,0,2,1,
2,1,0,0,2,0,2,0,2,1,
1,2,1,1,1,0,1,0,1,2,
0,0,0,0,1,0,0,0,0,0,
0,0,0,0,0,1,0,0,0,0,
0,0,0,0,0,0,1,0,0,0,
0,0,0,0,0,0,0,1,0,0,
0,0,0,0,0,0,0,0,1,0,
0,0,0,0,0,0,0,0,0,1],

\[1,0,0,0,0,0,0,0,0,0,
1,0,0,2,0,2,1,0,0,1,
1,2,1,2,0,2,1,0,0,1,
2,1,0,2,0,1,2,0,0,2,
0,0,0,0,1,0,0,0,0,0,
0,0,0,0,0,1,0,0,0,0,
0,0,0,0,0,0,1,0,0,0,
0,0,0,0,0,0,0,1,0,0,
0,0,0,0,0,0,0,0,1,0,
0,0,0,0,0,0,0,0,0,1],

\[0,0,1,1,2,0,1,1,1,2,
2,1,1,1,2,0,1,1,1,2,
0,2,0,1,0,0,2,1,2,1,
0,1,1,0,0,0,1,2,1,2,
2,0,1,1,0,0,1,1,1,2,
1,2,1,0,1,1,1,0,1,2,
1,2,1,0,1,0,2,0,1,2,
0,2,2,1,0,0,2,2,2,1,
0,0,0,0,0,0,0,0,1,0,
0,1,1,2,0,0,1,2,1,0],

\[2,1,2,0,0,2,0,1,2,2,
1,2,2,0,0,2,0,1,2,2,
0,2,0,1,0,0,2,1,2,1,
0,1,1,0,0,0,1,2,1,2,
1,1,2,0,1,2,0,1,2,2,
2,1,0,1,0,2,2,0,0,2,
2,1,0,1,0,1,0,0,0,2,
0,2,2,1,0,0,2,2,2,1,
0,0,0,0,0,0,0,0,1,0,
0,1,1,2,0,0,1,2,1,0],

\[1,1,1,2,0,0,1,2,1,2,
0,2,1,2,0,0,1,2,1,2,
1,1,1,1,1,0,0,1,0,0,
0,2,2,2,0,0,2,1,2,1,
2,0,1,1,0,0,1,1,1,2,
0,0,0,0,0,1,0,0,0,0,
0,1,1,2,0,0,2,2,1,2,
1,2,1,0,1,0,1,1,1,2,
0,2,2,1,0,0,2,1,0,1,
0,1,1,2,0,0,1,2,1,0],

\[1,1,1,2,0,0,1,2,1,2,
0,2,1,2,0,0,1,2,1,2,
2,0,0,2,0,1,1,1,2,0,
0,2,2,2,0,0,2,1,2,1,
1,1,2,0,1,2,0,1,2,2,
0,0,0,0,0,1,0,0,0,0,
0,1,1,2,0,0,2,2,1,2,
2,1,0,1,0,1,2,1,0,2,
0,2,2,1,0,0,2,1,0,1,
0,1,1,2,0,0,1,2,1,0],

\[0,2,2,1,1,0,2,2,1,2,
2,0,2,1,1,0,2,2,1,2,
0,0,1,0,0,0,0,0,0,0,
1,1,1,0,2,0,1,1,2,1,
0,0,0,0,1,0,0,0,0,0,
0,0,0,0,0,1,0,0,0,0,
1,1,1,2,2,0,2,1,2,1,
1,1,1,2,2,0,1,2,2,1,
2,2,2,1,1,0,2,2,2,2,
0,0,0,0,0,0,0,0,0,1],

\[1,1,1,2,0,1,0,2,0,2,
0,2,1,2,0,1,0,2,0,2,
0,0,1,0,0,0,0,0,0,0,
0,2,2,2,0,2,0,1,0,1,
0,0,0,0,1,0,0,0,0,0,
0,0,0,0,0,1,0,0,0,0,
0,2,2,1,0,2,1,1,0,1,
0,2,2,1,0,2,0,2,0,1,
0,1,1,2,0,1,0,2,1,2,
0,0,0,0,0,0,0,0,0,1],

\[2,2,0,2,0,0,0,0,2,1,
1,0,0,2,0,0,0,0,2,1,
0,0,1,0,0,0,0,0,0,0,
2,1,0,2,0,0,0,0,1,2,
0,0,0,0,1,0,0,0,0,0,
0,0,0,0,0,1,0,0,0,0,
2,1,0,1,0,0,1,0,1,2,
2,1,0,1,0,0,0,1,1,2,
1,2,0,2,0,0,0,0,0,1,
0,0,0,0,0,0,0,0,0,1],

\[2,1,1,2,2,0,1,1,2,1,
1,2,1,2,2,0,1,1,2,1,
1,1,2,2,2,0,1,1,2,1,
2,2,2,2,1,0,2,2,1,2,
1,1,1,2,0,0,1,1,2,1,
0,0,0,0,0,1,0,0,0,0,
0,0,0,0,0,0,1,0,0,0,
1,1,1,2,2,0,1,2,2,1,
0,0,0,0,0,0,0,0,1,0,
2,2,2,1,1,0,2,2,1,0],

\[1,2,2,1,0,2,0,1,0,1,
0,0,2,1,0,2,0,1,0,1,
0,2,0,1,0,2,0,1,0,1,
0,1,1,0,0,1,0,2,0,2,
0,2,2,1,1,2,0,1,0,1,
0,0,0,0,0,1,0,0,0,0,
0,0,0,0,0,0,1,0,0,0,
0,2,2,1,0,2,0,2,0,1,
0,0,0,0,0,0,0,0,1,0,
0,1,1,2,0,1,0,2,0,0],

\[0,1,0,1,0,0,0,0,1,2,
2,2,0,1,0,0,0,0,1,2,
2,1,1,1,0,0,0,0,1,2,
1,2,0,0,0,0,0,0,2,1,
2,1,0,1,1,0,0,0,1,2,
0,0,0,0,0,1,0,0,0,0,
0,0,0,0,0,0,1,0,0,0,
2,1,0,1,0,0,0,1,1,2,
0,0,0,0,0,0,0,0,1,0,
1,2,0,2,0,0,0,0,2,2]
>; 

U := sub<VectorSpace(GF(3), 10) | 
[ GF(3) | 0, 0, 0, 2, 2, 2, 2, 0, 0, 2],
[ GF(3) | 1, 1, 0, 0, 1, 0, 2, 1, 1, 2],
[ GF(3) | 0, 1, 1, 1, 2, 2, 1, 2, 1, 2]
>; 

a, b, c := UnipotentStabiliser(G, U:ComputeBase := false);
a1, b1, c1 := MyUnipotentStabiliser (G, U: ComputeBase:=false);

assert c in G;
assert c1 in G;
assert U^c1 eq b1;
assert U^c eq b;

for j in [1..10] do
   g := Random(G);
   _, b2, _, _:= MyUnipotentStabiliser (G, U^g: ComputeBase:=false); 
   assert b2 eq b1;
end for;


