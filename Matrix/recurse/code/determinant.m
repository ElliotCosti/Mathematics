/* does the determinant map have non-trivial image? */

GroupDeterminants := function (G)
   U := UserGenerators (G);
   F := BaseRing (G);
   image := [Determinant (U[i]): i in [1..#U]];
   orders := [Order (x): x in image];
   return Lcm (orders) gt orders[1];
end function;
   
ImageOfDeterminantElement := function (G, g)
   return Determinant (g) @@ G`DeterminantImageMap;
end function;

ImageOfDeterminantScalar := ImageOfDeterminantElement;
 
/* image of G under determinant map */

DeterminantImage := function (G)
   U := UserGenerators (G);
   F := BaseRing (G);
   E, phi := MultiplicativeGroup (F);
   G`DeterminantImageMap := phi;
   image := [ImageOfDeterminantElement (G, U[i]): i in [1..#U]];
   S := sub <E | image>;
   S`UserGenerators := image;
   vprint User1: "Order of group generated by determinants is ", #S;
   return S;
end function;

/* write g as word in user defined generators of G */

SolveWordCyclicGroup := function (G, g)

   /* first decide membership of g in G */
   n := #G;
   if n mod Order (g) ne 0 then return false, _; end if;

   /* now write g as word in generators of G; 
      g and U[i] are relative to supergroup E, not to S which 
      may be proper subgroup; see previous procedure */

   U := UserGenerators (G);
   m := Eltseq (G!g)[1];
   log := [Eltseq ((G!U[i]))[1]: i in [1..#U]];
   d, coeffs := XGCD (log);
   n := #G;
   if Gcd (m, n) mod Gcd (d, n) ne 0 then return false, _; end if;
   k := Solution (d, m, #G);
   coeffs := [c * k: c in coeffs];
   W := G`SLPGroup;
   return true, &*[W.i^coeffs[i]: i in [1..#coeffs]];
end function;
